# -----------------------------------------------------------------------------
# Docker Compose for PRODUCTION DEPLOYMENT (Sales Engine Unified Forecast)
# -----------------------------------------------------------------------------
# This file is designed for production environment deployment.
#
# Key Features:
#   - Uses the pre-built production Docker image with unified forecast table
#   - Connects to Cloud SQL via shared proxy using host networking
#   - Uses unified forecast table structure with composite primary key (sku, year, month)
#   - Simplified forecasting pipeline with single table for all forecast data
#   - Timestamp-based incremental sync using updated_at column
#   - Depends on shared-cloud-sql-proxy service
#
# Usage:
#   This file is used by deployment scripts or CI/CD pipelines.
#   To run manually:
#   docker-compose -f deployment/docker-compose.shared-proxy.yml up -d
#   docker-compose -f deployment/docker-compose.prod.yml run --rm sales-engine
#
services:
  # The main application service, using the unified forecast table structure
  sales-engine:
    # Use an image from a container registry (e.g., GCR)
    # Replace with your actual image path
    image: gcr.io/${PROJECT_ID}/sales-engine:latest
    container_name: sales-engine-prod
    restart: "no"
    # In production, environment variables are passed directly by the orchestrator
    environment:
      - ENVIRONMENT=production
      - GCP_PROJECT_ID=${PROJECT_ID}
      - DB_HOST=127.0.0.1 # Connect to shared proxy
      - DB_PORT=5432
      - USE_TEST_ODOO=${USE_TEST_ODOO:-false}  # Ensures we use odoo_prod by default
      - FORCE_FULL_SYNC=${FORCE_FULL_SYNC:-false}  # Normal incremental sync by default
      - TEST_CONNECTIONS_ONLY=${TEST_CONNECTIONS_ONLY:-false}  # Full sync operation by default
      - SKIP_FORECAST=${SKIP_FORECAST:-false}  # Run forecast pipeline by default
      - FORECAST_ONLY=${FORECAST_ONLY:-false}  # Run only forecast pipeline if true
      # DB_NAME, DB_USER, DB_PASSWORD will be fetched from Secret Manager
    # Use host network for direct proxy access
    network_mode: "host"
    # No depends_on needed since we use host networking and shared proxy runs separately